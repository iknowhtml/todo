version: 2
jobs:
  # Updates versions of services if applicable and pushes update with tag
  build:
    docker:
      - image: circleci/node
    working_directory: ~/todo
    shell: /bin/sh -leo pipefail
    environment:
      BASH_ENV: /etc/profile
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7f:d5:e1:d4:71:b6:bf:66:de:65:89:d5:28:26:7e:47"
      # Checks out code from Github
      - checkout
      # Sets up remote Docker container to execute Docker commands
      - setup_remote_docker
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run: 
          name: Install Lerna
          command: yarn install --freeze-lockfile
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run: 
          name: "Set CURRENT_TAG and PREVIOUS_TAG environment variables"
          command: |
            echo 'export PREVIOUS_TAG=`git describe --abbrev=0 --tags $(git rev-list --tags --max-count=2) | sed -n 2p`' >> $BASH_ENV 
            echo 'export CURRENT_TAG=`git describe --abbrev=0 --tags $(git rev-list --tags --max-count=2) | sed -n 1p`' >> $BASH_ENV
      - run:
          name: Set GitHub account identity
          command: |
            git config user.email "circleci-deployment-bot@iknowht.ml"
            git config user.name "circleci-deployment-bot"
      - run:
          # Only increments version and pushes tag if file changes warrant a redeployment
          name: Increment version(s) & push tag(s)
          command: lerna version --conventional-commits --yes
      - run:
          # Only builds containers if a version update has been made to package.json
          name: Build & push container images(s)
          command: |
           lerna run package --since $PREVIOUS_TAG
           echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
           lerna run push --since $PREVIOUS_TAG
      - run:
          name: Deploy container(s)
          command: |
            if false; then
             echo
            else
              lerna run deploy --since $PREVIOUS_TAG
            fi
    branches:
      only: master