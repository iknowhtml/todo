apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "todo.fullname" . }}-{{ .Values.server.graphql.deployment.name }}"
spec:
  replicas: {{ .Values.server.graphql.deployment.replicaCount }}
  selector:
    matchLabels:
      name: "{{ include "todo.fullname" . }}-{{ .Values.server.graphql.deployment.name }}"
  template:
    metadata:
      labels:
        name: "{{ include "todo.fullname" . }}-{{ .Values.server.graphql.deployment.name }}"
    spec:
      containers:
        - name: "{{ .Chart.Name }}-{{ .Values.server.graphql.deployment.name }}"
          image: "{{ .Values.server.graphql.deployment.image.repository }}:{{ .Values.server.graphql.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.server.graphql.deployment.imagePullPolicy }}
          ports:
              - containerPort: {{ .Values.server.graphql.port }}
          {{- if .Values.environment.development }} 
          env:
          - name: ENVIRONMENT
            value: "development"
          - name: DB_HOST
            value: "{{ include "todo.fullname" . }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local"
          - name: DB_PORT
            value: "{{ .Values.postgresql.service.port }}"
          - name: DB_USER
            value: "{{ .Values.postgresql.postgresqlUsername }}"
          - name: DB_PASSWORD
            value: "{{ .Values.postgresql.postgresqlPassword }}"
          - name: DB_NAME
            value: "{{ .Values.postgresql.postgresqlDatabase }}"
          {{- else if .Values.environment.production }}
          env: 
          - name: HEROKU_API_KEY
            value: "{{ .Values.server.graphql.deployment.env.herokuAPIKey }}"
          - name: HEROKU_POSTGRES_ID
            value: "{{ .Values.server.graphql.deployment.env.herokuPostgresID}}"
          {{- end }}