version: 2
jobs:
  build:
    docker:
      - image: iknowhtml/todo-build-container:latest
    working_directory: ~/todo
    steps:
      # Add Github read write access key
      - add_ssh_keys:
          fingerprints:
            - "7f:d5:e1:d4:71:b6:bf:66:de:65:89:d5:28:26:7e:47"
      # Checks out code from Github
      - checkout
      - run: 
          name: "Set CURRENT_TAG and PREVIOUS_TAG environment variables"
          command: |
            echo 'export PREVIOUS_TAG=`git describe --abbrev=0 --tags $(git rev-list --tags --max-count=2) | sed -n 2p`' >> $BASH_ENV 
            echo 'export CURRENT_TAG=`git describe --abbrev=0 --tags $(git rev-list --tags --max-count=2) | sed -n 1p`' >> $BASH_ENV
      - run:
          name: Set GitHub account identity
          command: |
            git config user.email "circleci-deployment-bot@iknowht.ml"
            git config user.name "circleci-deployment-bot"
            # Sets up remote Docker container to execute Docker commands
      - run:
          # Only increments version and pushes tag if file changes warrant a redeployment
          name: Increment version(s) & push version(s)
          command: yarn version
      - run:
          name: Sets up tags for container(s)
          command: yarn run tag
      - setup_remote_docker
      - run:
          # Only builds containers if a version update has been made to package.json
          name: Build & push container images(s)
          command: |
           yarn package
           echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
           yarn push
      - run:
          name: Setup Google Cloud SDK
          command: |
           echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
           gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
           gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
           gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
           gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Update charts & upgrade helm release
          command: |
           yarn update 
           yarn deploy
    branches:
      only: master